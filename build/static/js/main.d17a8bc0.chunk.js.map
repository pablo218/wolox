{"version":3,"sources":["auth/AuthContext.js","shared/UI/Spinner/Spinner.js","types/types.js","shared/UI/Button.js","shared/UI/FavoriteItem.js","shared/UI/NavBar.js","shared/UI/Mobile/MenuMobile.js","shared/UI/Mobile/MenuButton.js","ErrorBoundaries/ErrorBoundarie.js","routers/AppRouter.js","auth/authReducer.js","shared/UI/EnglishEspañolButton.js","i18n/index.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","Spinner","className","types","login","logout","updateFavorites","Button","props","clases","clicked","disabled","onClick","children","FavoriteItem","item","favorites","JSON","parse","localStorage","getItem","user","useContext","length","logged","style","fontSize","color","marginLeft","NavBar","navbar","t","useTranslation","matchHome","useRouteMatch","matchTechs","to","src","alt","smooth","duration","MenuMobile","menu","li","visible","matchRegister","MenuButton","useState","setVisible","ErrorBoundarie","state","hasError","this","err","Component","LandingPage","React","lazy","Register","List","AppRouter","routes","path","render","fallback","authReducer","action","type","payload","EnglishEspañolButton","setLang","resources","en","translation","es","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","App","useReducer","dispatchUser","useEffect","setItem","stringify","language","setLanguage","Provider","value","changeLanguage","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d17a8bc0.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\n\r\nexport const AuthContext = createContext();","import React from 'react'\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loading-spinner\">\r\n            <div className=\"loading-spinner__ring\"></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","export const types = {\r\n    /***AUTH***/\r\n    login: \"[auth] login\",\r\n    logout: \"[auth] logout\",\r\n\r\n    /***FAVORITES***/\r\n    updateFavorites: \"[favs] update favorites\"\r\n}","import React from 'react'\r\n\r\nconst Button = (props) => {\r\n\r\n    const { clases, clicked, disabled } = props\r\n\r\n    return (\r\n        <button className={`btn ${clases}`} onClick={clicked} disabled={disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { useContext } from 'react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport { AuthContext } from '../../auth/AuthContext'\r\n\r\nconst FavoriteItem = () => {\r\n\r\n    const favorites = JSON.parse(localStorage.getItem(\"tech\"))\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    let item;\r\n\r\n\r\n    if (favorites?.length > 0 && user.logged) {\r\n        item = <li>\r\n            <p className=\"favoriteItem\"><FavoriteIcon className=\"heart\" style={{ fontSize: \"30px\", color: \"#a3cc39\", marginLeft: \"15px\" }} />\r\n                <span className=\"favoriteItem--text\">Techs:</span> {favorites.length}</p>\r\n        </li>\r\n    }\r\n    else {\r\n        item = null\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {item}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavoriteItem","import React, { useContext } from \"react\";\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport Button from './Button'\r\nimport FavoriteItem from './FavoriteItem'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\n\r\nconst NavBar = () => {\r\n\r\n    const { t } = useTranslation()\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const matchHome = useRouteMatch('/home')\r\n    const matchTechs = useRouteMatch('/techs')\r\n\r\n    let navbar;\r\n\r\n    if (matchHome) {\r\n        navbar =\r\n            <nav className=\"nav\" >\r\n                <Link to=\"/home\">\r\n                    <img className=\"nav--logo\" src=\"./assets/logo_full_color.svg\" alt=\"logo\" />\r\n                </Link>\r\n                <ul className=\"nav--list\">\r\n                    <Scroll className=\"nav--item\"\r\n                        to=\"inicio\"\r\n                        smooth={true}\r\n                        duration={1000}>\r\n                        {t(\"nav.home\")}\r\n                    </Scroll>\r\n\r\n\r\n                    <Scroll to=\"beneficios\"\r\n                        className=\"nav--item\"\r\n                        smooth={true}\r\n                        duration={1000}>\r\n                        {t(\"nav.benefits\")}\r\n                    </Scroll>\r\n\r\n                    {user.logged ?\r\n                        <Link to=\"/techs\"><li className=\"nav--item\">Techs</li></Link> :\r\n                        <Link className=\"nav--item\" to=\"/register\">\r\n                            <Button>\r\n                                {t(\"nav.reg\")}\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                    <FavoriteItem />\r\n                </ul>\r\n            </nav>\r\n\r\n    }\r\n    else if (matchTechs) {\r\n        navbar =\r\n            <nav className=\"nav\">\r\n                <Link to=\"/home\">\r\n                    <img className=\"nav--logo\" src=\"./assets/logo_full_color.svg\" alt=\"logo\" />\r\n                </Link>\r\n            </nav>\r\n    }\r\n    else {\r\n        navbar = null\r\n    }\r\n\r\n    return (<>{navbar}</>)\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default NavBar","import React, { useContext } from 'react';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport { AuthContext } from '../../../auth/AuthContext';\r\nimport FavoriteItem from '../FavoriteItem'\r\n\r\nconst MenuMobile = ({ clicked, visible }) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const matchHome = useRouteMatch('/home')\r\n    const matchTechs = useRouteMatch('/techs')\r\n    const matchRegister = useRouteMatch('/register')\r\n\r\n\r\n\r\n    let menu;\r\n    let li;\r\n\r\n    if (user.logged) {\r\n        li = <Link className=\"menu__item\" to=\"/techs\" onClick={clicked}>Techs</Link>\r\n    } else {\r\n        li = <li onClick={clicked} className=\"menu__item\">\r\n            <Link to=\"/register\">\r\n                {t(\"nav.reg\")}\r\n            </Link>\r\n        </li >\r\n    }\r\n\r\n    if (matchHome) {\r\n        menu =\r\n            <ul className={`menu ${visible && \"menu-visible\"}`}>\r\n                <li><img className=\"menu_mobile--imagen menu__item\" src=\"./assets/Ic_Wolox_Footer.svg\" alt=\"logo\" /></li>\r\n                <li onClick={clicked} className=\"menu__item\">\r\n                    <Scroll to=\"inicio\" smooth={true} duration={1000} onClick={clicked}>\r\n                        {t(\"nav.home\")}\r\n                    </Scroll>\r\n                </li>\r\n                <li onClick={clicked} className=\"menu__item\">\r\n                    <Scroll to=\"beneficios\" smooth={true} duration={1000} onClick={clicked}>\r\n                        {t(\"nav.benefits\")}\r\n                    </Scroll>\r\n                </li>\r\n                {li}\r\n                <FavoriteItem />\r\n            </ul>\r\n\r\n    }\r\n    else if (matchTechs) {\r\n        menu =\r\n            <ul className={`menu ${visible && \"menu-visible\"}`}>\r\n                <li><img className=\"menu_mobile--imagen menu__item\" src=\"./assets/Ic_Wolox_Footer.svg\" alt=\"logo\" /></li>\r\n                <Link to=\"/home\">\r\n\r\n                    <li onClick={clicked} className=\"menu__item\" >\r\n                        {t(\"nav.home\")}\r\n                    </li>\r\n                </Link>\r\n\r\n\r\n            </ul>\r\n    }\r\n\r\n    else if (matchRegister) {\r\n        menu =\r\n            <ul className={`menu ${visible && \"menu-visible\"}`}>\r\n                <li><img className=\"menu_mobile--imagen menu__item\" src=\"./assets/Ic_Wolox_Footer.svg\" alt=\"logo\" /></li>\r\n                <Link to=\"/home\">\r\n                    <li onClick={clicked} className=\"menu__item\" >\r\n                        {t(\"nav.home\")}\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n    }\r\n\r\n    return (\r\n        <>{menu}</>\r\n    )\r\n}\r\n\r\nexport default MenuMobile\r\n","import React, { useState } from 'react'\r\n\r\nimport MenuMobile from './MenuMobile'\r\n\r\nconst MenuButton = () => {\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const clicked = () => {\r\n        setVisible((visible) => !visible);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"btn__navigation\" onClick={clicked}>\r\n                <span className={`btn__navigation__icon ${visible ? 'btn__navigation__icon__clicked' : ''}`}>&nbsp;</span>\r\n            </div>\r\n            <MenuMobile visible={visible} clicked={clicked} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuButton\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundarie extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(err) {\r\n        return { hasError: true }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n\r\n            return (\r\n                <div className=\"errorBoundarie\">\r\n                    <img className=\"errorBoundarie--image\" src=\"./assets/error.png\" alt=\"error\" />\r\n                    <h1 className=\"errorBoundarie--text\">Los sentimos</h1>\r\n                    <h1 className=\"errorBoundarie--text\">Hubo un error</h1>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        return <>{this.props.children}</>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundarie","import React, { useContext, Suspense } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport NavBar from '../shared/UI/NavBar';\r\nimport MenuButton from '../shared/UI/Mobile/MenuButton';\r\nimport Spinner from \"../shared/UI/Spinner/Spinner\"\r\nimport ErrorBoundarie from '../ErrorBoundaries/ErrorBoundarie'\r\n\r\nconst LandingPage = React.lazy(() => import('../pages/LandingPage'));\r\nconst Register = React.lazy(() => import('../pages/Register'));\r\nconst List = React.lazy(() => import('../pages/List'));\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    let routes\r\n\r\n    if (user.logged) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/techs\" render={() =>\r\n                    (<Suspense fallback={<Spinner />}>\r\n                        <ErrorBoundarie>\r\n                            <List />\r\n                        </ErrorBoundarie>\r\n                    </Suspense>)} />\r\n                <Route path=\"/home\" render={() => (<Suspense fallback={<Spinner />}><LandingPage /></Suspense>)} />\r\n                <Redirect to=\"/techs\" />\r\n            </Switch >\r\n        )\r\n    }\r\n    else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/register\" render={() => (<Suspense fallback={<Spinner />}><Register /></Suspense>)} />\r\n                <Route path=\"/home\" render={() => (<Suspense fallback={<Spinner />}><LandingPage /></Suspense>)} />\r\n                <Redirect to=\"/home\" />\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <NavBar />\r\n                <MenuButton />\r\n                {routes}\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n\r\n\r\n/*<div className=\"loading\">Loading...</div>*/","import { types } from '../types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true,\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst EnglishEspañolButton = ({ setLang }) => {\r\n\r\n    const { t } = useTranslation()\r\n\r\n    return (\r\n        <div className=\"btn__english\" onClick={setLang}>\r\n            {t(\"setlang.button\")}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EnglishEspañolButton\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport enTrasnlation from './en.json';\r\nimport esTranslation from './es.json';\r\n\r\n\r\nconst resources = {\r\n\r\n    en: {\r\n        translation: enTrasnlation\r\n    },\r\n    es: {\r\n        translation: esTranslation\r\n    }\r\n\r\n};\r\n\r\ni18n.use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        lng: \"es\",\r\n        keySeparator: false,\r\n        interpolation: {\r\n            escapeValue: false\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React, { useState, useReducer, useEffect } from \"react\";\r\n\r\nimport AppRouter from './routers/AppRouter'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from \"./auth/authReducer\";\r\nimport EnglishEspañolButton from './shared/UI/EnglishEspañolButton'\r\n\r\nimport './i18n/index'\r\n\r\nimport \"./styles/main.scss\";\r\nimport i18n from \"./i18n/index\";\r\n\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n\r\n}\r\n\r\nexport default function App() {\r\n\r\n  const [user, dispatchUser] = useReducer(authReducer, {}, init)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n  }, [user])\r\n\r\n  const [language, setLanguage] = useState(\"es\")\r\n\r\n  const changeLangHandler = () => {\r\n    if (language === \"es\") {\r\n      setLanguage(\"en\")\r\n    }\r\n    else {\r\n      setLanguage(\"es\")\r\n    }\r\n    i18n.changeLanguage(language)\r\n  }\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, dispatchUser }}>\r\n      <EnglishEspañolButton setLang={changeLangHandler} />\r\n      <AppRouter />\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}